name: widget-server pipe

on:
  push:
    branches:
      - "main"

jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure node
        id: configure_node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install pnpm
        id: install_pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        id: install_dependencies
        run: |
          pnpm install

      - name: Configure AWS Credentials
        id: configure_aws_credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to AWS ECR
        id: login_ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        id: set_up_docker_buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate tag
        id: generate_tag
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Build and push image to AWS ECR
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.login_ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:test

      - name: Run Trivy vulnerability scanner
        id: run_trivy_scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: "${{ steps.login_ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:test"
          format: "table"
          # exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGHT,MEDIUM,LOW"

      - name: Build and push image to AWS ECR
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          cache-from: type=gha
          tags: ${{ steps.login_ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:${{ steps.generate_tag.outputs.sha }}
